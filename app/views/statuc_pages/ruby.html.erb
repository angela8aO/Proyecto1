<h1>Ruby</h1>
<br><p>Interpolación de strings</p>
<p>Rta. Disponer de una expresion dentro de un string para que ruby interprete el string definitivo</p>
<br><p>Cómo se declara un array y cómo se adiciona un elemento al final del array</p>
<p>Rta. Forma 1 : array = Array(nil) </p>
<p> Forma 2 : array = [] </p>
<p> Forma 3 : array = Array.new </p>
<p> Forma 4 : array = Array(1,2.....10) </p>
<p> Agregar un elemnto al final del array : array.unshift(elemento) </p>
<br><p>Cómo se itera un array utilizando el comando each</p>
<p>Rta. Array.each do |elemento| accion end </p>
<br><p>Se maneja con un do end donde extrae cada elemento de 
array dentro de una variable que se asignara como un parametro 
que en este caso se ve como un elemento </p>
<br><p>Cómo se declara un hash</p>
<p>Rta.</p>
<p>Forma 1 hash = Hash.new</p>
<p>Forma 2 hash = { "llave" => "valor }</p>
<br><p>Cómo se itera un hash utilizando el comando each</p>
<p>Cómo en los arrays se hace un do end pero en este caso el aparametro que se entra no es solo
uno ya que se da un parametro de tipo llave y un parametro de tipo valor</p>
<p>hash.each do |llave,valor| accion end </p>
<br><p>Que es un block en ruby? De un ejemplo de cómo utilizarlo</p>
<p>Un block se puede definir como un meotodo o funcion que se realiza con el do end</p>
<p>bloque {do accion 1 , accion2  end}</p>
<br><p>Cual es la convención en Ruby a la hora de nombrar variables?</p>
<p>Definir una variable</p>
<p>variable = "algo"</p>
<p>Definir un metodo</p>
<p>def metodo ... end</p>
<br><p>Qué son attr_reader, attr_writer y attr_accesor? Para qué sirven?</p>
<p>Estos metodos nos permiten compartir atributos y variables de instancias ya sea  
para solo lectura (arrt_reader), para escritura (attr_writer), y para ambas funciones (attr_accesor) </p>
<br>
<p>Aqui encuentras las paginas del proyecto </p>
<%= link_to 'Home', :action => :home %>

